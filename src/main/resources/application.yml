server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:adminapp-db}?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: ${DB_USERNAME:user}
    password: ${DB_PASSWORD:user123}
    driverClassName: com.mysql.cj.jdbc.Driver
    #Pour aws, nous navons pas besoin de driver
#    url: jdbc:mysql://database-mysql1.cv3dshuqxbdr.us-east-1.rds.amazonaws.com:3306/db_test?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#    username: admin
#    password: hlKQUq[#R{XW+wh)Ji!xs8Vs:XO[
#    url: jdbc:mysql://adminapp-db.cv3dshuqxbdr.us-east-1.rds.amazonaws.com:3306/adminappdb
#    username: admin
#    password: SamanecorporationPasser123!
  application:
    name: admin-app
#SamanecorporationPasser123!
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  #modification pour le caching
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 60000
      ssl:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,wavefront
  info:
    env:
      enabled: true

  endpoint:
    health:
      show-details: ALWAYS

  health:
    redis:
      enabled: true #modification pour redis == false a true
    probes:
      enabled: true

info:
  application:
    name: admin-app
    version: '@project.version@'

wavefront:
  application:
    name: admin-app

logging:
  level:
    org:
      springframework:
        web: DEBUG
  file:
    name: logs/logs.log